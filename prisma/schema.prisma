generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 4
  output               = "../src/prisma_client/"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model test {
  id Int?

  @@ignore
}

model User {
  // 用户
  id        String    @id @default(uuid())
  account   String
  password  String
  nickname  String
  salt      String
  create_at DateTime? @default(now())
  update_at DateTime?
  status    Int       @default(1)
  Post      Post[]
}

model Dict {
  // 词典
  id        String    @id @default(uuid())
  main_code String
  sub_code  String
  group     String
  status    Int       @default(1)
  create_at DateTime? @default(now())
  update_at DateTime?

  values DictValues[] @relation("DictValueToDict")

  @@unique([main_code, sub_code])
}

model DictValues {
  // 词典值
  id        String    @id @default(uuid())
  code      String
  value     String?
  sort      Int       @default(-1)
  type      String    @default("text")
  create_at DateTime? @default(now())
  update_at DateTime?
  status    Int       @default(1)

  Dict   Dict   @relation("DictValueToDict", fields: [dictId], references: [id])
  dictId String

  @@unique([code, dictId])
}

model Post {
  // 文章类
  id        String     @id @default(uuid())
  title     String
  code      String
  author    User       @relation(fields: [userId], references: [id])
  content   String?
  is_deploy Boolean    @default(false)
  create_at DateTime?  @default(now())
  update_at DateTime?
  deploy_at DateTime?
  userId    String
  status    Int        @default(1)
  tags      PostTags[]
}

model PostCate {
  //  文章分类
  id         String     @id @default(uuid())
  title      String
  code       String
  is_root    Boolean    @default(true)
  parent     PostCate?  @relation("CateToParent", fields: [postCateId], references: [id])
  status     Int        @default(1)
  PostCate   PostCate[] @relation("CateToParent")
  postCateId String?
}

model PostTags {
  //  文章标签
  id     String @id @default(uuid())
  title  String
  code   String
  posts  Post[]
  status Int    @default(1)

  @@unique([code])
}
